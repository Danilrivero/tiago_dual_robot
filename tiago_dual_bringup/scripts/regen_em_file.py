#!/usr/bin/env python3

# Copyright (c) 2022 PAL Robotics S.L. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import em
import sys
import os

from tiago_dual_description.tiago_dual_launch_utils import get_tiago_dual_hw_suffix

em_file_path = sys.argv[1]

no_em_extension_path = os.path.splitext(em_file_path)[0]
no_extension_path = os.path.splitext(no_em_extension_path)[0]
extension = os.path.splitext(no_em_extension_path)[1]

end_effectors = ["pal-hey5", "pal-gripper",
                 "robotiq-2f-85", "robotiq-2f-140", "robotiq-epick", "custom", "no-ee"]
arm_config = [True, False]

for left_end_effector in end_effectors:
    for right_end_effector in end_effectors:
        for has_arm_left in arm_config:
            for has_arm_right in arm_config:

                cfg = {
                    "has_arm_left": has_arm_left,
                    "has_arm_right": has_arm_right,
                    "end_effector_left": left_end_effector,
                    "end_effector_right": right_end_effector
                }

                with open(em_file_path, "r") as f:
                    expanded_contents = em.expand(f.read(), cfg)

                suffix = get_tiago_dual_hw_suffix(
                    arm_right="tiago-arm" if has_arm_right else "no-arm",
                    arm_left="tiago-arm" if has_arm_left else "no-arm",
                    end_effector_right=cfg["end_effector_right"],
                    end_effector_left=cfg["end_effector_left"])

                expanded_file_name = no_extension_path + suffix + extension
                with open(expanded_file_name, "w") as f:
                    msg = "Autogenerated file, don't edit this, edit {} instead".format(
                        os.path.basename(em_file_path))
                    if extension == ".yaml":
                        f.write("#" + msg + "\n")
                    elif extension in [".xacro", ".xml", ".srdf"]:
                        f.write("<!-- " + msg + "-->\n")

                    f.write(expanded_contents)
                print("Generated " + expanded_file_name)
